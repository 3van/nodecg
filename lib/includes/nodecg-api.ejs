function NodeCG(bundlename) {
    this.host = '<%= host %>';
    this.port = '<%= port %>';

    // We can't guarantee Socket.io is ready in time on the view, so empty object for now
    this._socket = {};

    this._handlers = [];

    var self = this;

    // Called internally once we know Socket.io is ready
    this._setupAPI = function() {
        self._socket = io.connect('http://'+ self.host +':'+ self.port +'/');

        self._socket.on('connect', function () {
            self._socket.on('message', function (data) {
                if (data.bundleName !== bundlename)
                    return;

                for (var i = 0; i < self._handlers.length; i++) {
                    var _handler = self._handlers[i];
                    if (data.messageName === _handler.messageName) {
                        _handler.func(data.content);
                    }
                }
            });
        });

        self.sendMessage = function (messageName, data) {
            self._socket.json.send({
                bundleName: bundlename,
                messageName: messageName,
                content: data
            });
        };

        self.listenFor = function (messageName, handler) {
            self._handlers.push({
                messageName: messageName,
                func: handler
            });
        };
    };

    // On the dashboard, Socket.io is defined so setup now
    // viewsetup.ejs will call when ready
    if (typeof io !== "undefined") {
        this._setupAPI();
    }

    // For use by views, never called on dashboard
    this.onready = function() {};
}